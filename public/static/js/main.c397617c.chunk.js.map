{"version":3,"sources":["pages/_layouts/auth/styles.js","pages/_layouts/auth/index.js","pages/_layouts/default/styles.js","pages/_layouts/default/index.js","store/modules/auth/reducer.js","store/modules/user/reducer.js","store/modules/rootReducer.js","services/history.js","services/api.js","store/modules/auth/actions.js","store/modules/auth/sagas.js","store/modules/user/actions.js","store/modules/user/sagas.js","store/modules/rootSaga.js","store/index.js","store/persistReducers.js","store/createStore.js","routes/Route.js","pages/SignIn/index.js","pages/SignUp/index.js","styles/colors.js","pages/Dashboard/styles.js","components/Header/styles.js","components/Avatar/index.js","components/Header/ManageAccount/styles.js","components/AvatarInput/styles.js","components/AvatarInput/index.js","components/Header/ManageAccount/index.js","components/Header/index.js","pages/Dashboard/index.js","pages/Profile/styles.js","pages/Profile/index.js","routes/index.js","styles/global.js","App.js","serviceWorker.js","index.js","assets/logo.png"],"names":["Wrapper","styled","div","Content","darken","AuthLayout","children","DefaultLayout","INITIAL_STATE","token","signed","loading","profile","combineReducers","auth","state","action","produce","draft","type","payload","user","history","createBrowserHistory","api","axios","create","baseURL","signInSuccess","signIn","signUp","email","password","call","post","response","data","defaults","headers","Authorization","put","push","toast","error","name","confirmPassword","promoter","success","all","takeLatest","updateProfileRequest","updateProfileSuccess","updateProfile","avatar_id","id","rest","oldPassword","rootSaga","reducers","sagaMiddleware","createSagaMiddleware","sagaMonitor","middlewares","store","enhancer","applyMiddleware","createStore","rootReducer","persistReducer","key","storage","whiteList","persistor","persistStore","RouteWrapper","Component","component","isPrivate","getState","to","Layout","render","props","run","defaultProps","schema","Yup","shape","required","SignIn","dispatch","useDispatch","useSelector","src","logo","alt","width","onSubmit","signInRequest","placeholder","SignUp","signUpRequest","colors","primary","accent","darkPrimary","Container","Event","li","Description","Avatar","size","editing","css","visible","Exit","Link","AvatarInput","useState","file","setFile","url","preview","setPreview","ref","useRef","e","a","FormData","append","target","files","avatar","htmlFor","accept","data-file","onChange","ManageAccount","className","onClick","Header","tittle","setEditing","color","Dashboard","events","setEvents","useEffect","get","loadEvents","map","event","banner","date","Profil","initialData","Routes","path","exact","Profile","createGlobalStyle","App","autoClose","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.c397617c.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  max-width: 315px;\n  text-align: center;\n\n  form {\n    display: flex;\n    flex-direction: column;\n    margin-top: 30px;\n\n    input {\n      background-color: rgba(0, 0, 0, 0.1);\n      border: none;\n      border-radius: 4px;\n      height: 44px;\n      padding: 0 15px;\n      color: #fff;\n      margin: 0 0 10px;\n\n      &::placeholder {\n        color: rgba(255, 255, 255, 0.7);\n      }\n    }\n\n    span {\n      color: #fb6f91;\n      align-self: flex-start;\n      margin: 0 0 10px;\n      font-weight: bold;\n    }\n\n    button {\n      margin: 5px 0 0;\n      height: 44px;\n      background: #3b9eff;\n      font-weight: bold;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      font-size: 16px;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.03, '#3b9eff')};\n      }\n    }\n\n    a {\n      color: #fff;\n      margin-top: 15px;\n      font-size: 16px;\n      opacity: 0.8;\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Wrapper, Content } from './styles';\n\nexport default function AuthLayout({ children }) {\n  return (\n    <Wrapper>\n      <Content>{children}</Content>\n    </Wrapper>\n  );\n}\n\nAuthLayout.propTypes = {\n  children: PropTypes.elementType.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #eee;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Wrapper } from './styles';\n\nexport default function DefaultLayout({ children }) {\n  return <Wrapper>{children}</Wrapper>;\n}\n\nDefaultLayout.propTypes = {\n  children: PropTypes.elementType.isRequired,\n};\n","import produce from 'immer';\n\nconst INITIAL_STATE = {\n  token: null,\n  signed: false,\n  loading: false,\n};\n\nexport default function auth(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case '@auth/SIGN_IN_REQUEST': {\n        draft.loading = true;\n        break;\n      }\n      case '@auth/SIGN_IN_SUCCESS': {\n        draft.token = action.payload.token;\n        draft.signed = true;\n        draft.loading = false;\n        break;\n      }\n      case '@auth/SIGN_IN_FAILURE': {\n        draft.loading = false;\n        break;\n      }\n      case '@auth/SIGN_OUT': {\n        draft.token = null;\n        draft.signed = false;\n        break;\n      }\n      default:\n    }\n  });\n}\n","import produce from 'immer';\n\nconst INITIAL_STATE = {\n  profile: null,\n};\n\nexport default function user(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case '@auth/SIGN_IN_SUCCESS': {\n        draft.profile = action.payload.user;\n        break;\n      }\n      case '@user/UPDATE_PROFILE_SUCCESS': {\n        draft.profile = action.payload.profile;\n        break;\n      }\n      case '@auth/SIGN_OUT': {\n        draft.profile = null;\n        break;\n      }\n      default:\n    }\n  });\n}\n","import { combineReducers } from 'redux';\n\nimport auth from './auth/reducer';\nimport user from './user/reducer';\n\nexport default combineReducers({\n  auth,\n  user,\n});\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n\nexport default api;\n","export function signInRequest(email, password) {\n  return {\n    type: '@auth/SIGN_IN_REQUEST',\n    payload: { email, password },\n  };\n}\n\nexport function signInSuccess(token, user) {\n  return {\n    type: '@auth/SIGN_IN_SUCCESS',\n    payload: { token, user },\n  };\n}\n\nexport function signUpRequest(name, email, password, confirmPassword) {\n  return {\n    type: '@auth/SIGN_UP_REQUEST',\n    payload: { name, email, password, confirmPassword },\n  };\n}\n\nexport function signFailure() {\n  return {\n    type: '@auth/SIGN_IN_FAILURE',\n  };\n}\n\nexport function signOut() {\n  return {\n    type: '@auth/SIGN_OUT',\n  };\n}\n","import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport history from '~/services/history';\nimport api from '~/services/api';\nimport { signInSuccess, signFailure } from './actions';\n\nexport function* signIn({ payload }) {\n  try {\n    const { email, password } = payload;\n\n    const response = yield call(api.post, 'sessions', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    api.defaults.headers.Authorization = `Bearer ${token}`; // The Bearer token for all api requests\n\n    yield put(signInSuccess(token, user));\n\n    history.push('/dashboard');\n  } catch (err) {\n    toast.error('Falha na autenticação, verifique seus dados');\n    yield put(signFailure());\n  }\n}\n\nexport function* signUp({ payload }) {\n  try {\n    const { name, email, password, confirmPassword } = payload;\n\n    yield call(api.post, 'users', {\n      name,\n      email,\n      password,\n      confirmPassword,\n      promoter: false,\n    });\n\n    toast.success(`Parabéns ${name}, agora você pode curtir o role!`);\n\n    history.push('/');\n  } catch (err) {\n    toast.error('Falha no cadastro, verifique seus dados');\n\n    yield put(signFailure());\n  }\n}\n\nexport function setToken({ payload }) {\n  if (!payload) return;\n\n  const { token } = payload.auth;\n\n  if (token) {\n    api.defaults.headers.Authorization = `Bearer ${token}`; // The Bearer token for all api requests\n  }\n}\n\nexport function signOut() {\n  history.push('/');\n}\n\nexport default all([\n  takeLatest('persist/REHYDRATE', setToken),\n  takeLatest('@auth/SIGN_IN_REQUEST', signIn),\n  takeLatest('@auth/SIGN_UP_REQUEST', signUp),\n  takeLatest('@auth/SIGN_OUT', signOut),\n]);\n","export function updateProfileRequest(data) {\n  return {\n    type: '@user/UPDATE_PROFILE_REQUEST',\n    payload: { data },\n  };\n}\n\nexport function updateProfileSuccess(profile) {\n  return {\n    type: '@user/UPDATE_PROFILE_SUCCESS',\n    payload: { profile },\n  };\n}\n\nexport function updateProfileFailure() {\n  return {\n    type: '@user/UPDATE_PROFILE_FAILURE',\n  };\n}\n","import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '~/services/api';\n\nimport { updateProfileSuccess, updateProfileFailure } from './actions';\n\nexport function* updateProfile({ payload }) {\n  try {\n    const { name, email, id: avatar_id, ...rest } = payload.data;\n\n    const profile = {\n      name,\n      email,\n      avatar_id,\n      ...(rest.oldPassword ? rest : {}),\n    };\n\n    const response = yield call(api.put, 'users', profile);\n\n    yield put(updateProfileSuccess(response.data));\n    toast.success('Dados atualizados com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao atualizar perfil, confira seus dados!');\n    yield put(updateProfileFailure());\n  }\n}\n\nexport default all([takeLatest('@user/UPDATE_PROFILE_REQUEST', updateProfile)]);\n","import { all } from 'redux-saga/effects';\n\nimport auth from './auth/sagas';\nimport user from './user/sagas';\n\nexport default function* rootSaga() {\n  return yield all([auth, user]);\n}\n","import { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\n\nimport createStore from './createStore';\nimport persistReducers from './persistReducers';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor =\n  process.env.NODE_ENV === 'development'\n    ? console.tron.createSagaMonitor()\n    : null;\n\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\nconst middlewares = [sagaMiddleware];\n\nconst store = createStore(persistReducers(rootReducer), middlewares);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport { store, persistor };\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nexport default reducers => {\n  const persistedReducer = persistReducer(\n    {\n      key: 'justParty',\n      storage,\n      whiteList: ['auth', 'user'], // Only persists the reducers inside the whiteList\n    },\n    reducers\n  );\n\n  return persistedReducer;\n};\n","import { createStore, compose, applyMiddleware } from 'redux';\n\nexport default (reducers, middlewares) => {\n  const enhancer =\n    process.env.NODE_ENV === 'development'\n      ? compose(\n          console.tron.createEnhancer(),\n          applyMiddleware(...middlewares)\n        )\n      : applyMiddleware(...middlewares);\n\n  return createStore(reducers, enhancer);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport AuthLayout from '~/pages/_layouts/auth';\nimport DefaultLayout from '~/pages/_layouts/default';\n\nimport { store } from '~/store';\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const { signed } = store.getState().auth;\n\n  if (!signed && isPrivate) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (signed && !isPrivate) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  const Layout = signed ? DefaultLayout : AuthLayout;\n\n  return (\n    <Route\n      {...rest}\n      render={props => (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )}\n    />\n  );\n}\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: false,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Input, Form } from '@rocketseat/unform';\nimport { signInRequest } from '~/store/modules/auth/actions';\nimport logo from '~/assets/logo.png';\n\nconst schema = Yup.object().shape({\n  email: Yup.string()\n    .email('Insira um e-mail válido')\n    .required('O e-mail é obrigatório'),\n  password: Yup.string().required('A senha é obrigatória'),\n});\n\nexport default function SignIn() {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.auth.loading);\n\n  function handleSubmit({ email, password }) {\n    dispatch(signInRequest(email, password));\n  }\n\n  return (\n    <>\n      <img src={logo} alt=\"JustParty\" width=\"200\" />\n      <Form schema={schema} onSubmit={handleSubmit}>\n        <Input name=\"email\" type=\"email\" placeholder=\"Seu e-mail\" />\n        <Input name=\"password\" type=\"password\" placeholder=\"Sua senha\" />\n\n        <button type=\"submit\">{loading ? `carregando...` : `Acessar`}</button>\n        <Link to=\"/register\">\n          Ainda não possui uma conta? <span>Cadastre-se</span>\n        </Link>\n      </Form>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Input, Form } from '@rocketseat/unform';\nimport logo from '~/assets/logo.png';\nimport { signUpRequest } from '~/store/modules/auth/actions';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('O nome é obrigatório'),\n  email: Yup.string()\n    .email('Insira um e-mail válido')\n    .required('O e-mail é obrigatório'),\n  password: Yup.string().required('A senha é obrigatória'),\n  confirmPassword: Yup.string().required('Confirme sua senha'),\n});\n\nexport default function SignUp() {\n  const dispatch = useDispatch();\n\n  function handleSubmit({ name, email, password, confirmPassword }) {\n    dispatch(signUpRequest(name, email, password, confirmPassword));\n  }\n\n  return (\n    <>\n      <img src={logo} alt=\"JustParty\" width=\"200\" />\n      <Form schema={schema} onSubmit={handleSubmit}>\n        <Input name=\"name\" type=\"text\" placeholder=\"Nome completo\" />\n        <Input name=\"email\" type=\"email\" placeholder=\"Seu e-mail\" />\n        <Input name=\"password\" type=\"password\" placeholder=\"Sua senha\" />\n        <Input\n          name=\"confirmPassword\"\n          type=\"password\"\n          placeholder=\"Confirme sua senha\"\n        />\n\n        <button type=\"submit\">Cadastre-se</button>\n        <Link to=\"/\">Já possuí uma conta, hora da festa!</Link>\n      </Form>\n    </>\n  );\n}\n","const colors = {\n  primary: '#fb6f91',\n  accent: '#3b9eff',\n  darkPrimary: '#fb6f91',\n};\n\nexport default colors;\n","import styled from 'styled-components';\nimport { darken } from 'polished';\nimport colors from '~/styles/colors';\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  margin: 32px auto 32px auto;\n  padding: 24px;\n\n  ul {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 24px;\n  }\n`;\n\nexport const Event = styled.li`\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  box-shadow: 2px 2px 10px #00000055;\n  border-radius: 8px;\n\n  img {\n    width: 100%;\n    border-radius: 8px 8px 0 0;\n  }\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  margin-top: 8px;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n\n  button {\n    border-radius: 8px;\n    color: #fff;\n    padding: 8px;\n    border: 0;\n    background: ${colors.primary};\n\n    & :hover {\n      background: ${darken(0.5, colors.primary)};\n    }\n  }\n\n  div {\n    h3 {\n      font-size: 22px;\n      font-weight: 200;\n    }\n\n    span {\n      color: #777;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background: #191717;\n  padding: 0 30px;\n`;\n\nexport const Content = styled.div`\n  height: 64px;\n  max-width: 900px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  nav {\n    display: flex;\n    align-items: center;\n    font-weight: bold;\n    color: #fff;\n\n    img {\n      margin-right: 20px;\n      padding-right: 20px;\n      border-right: 1px solid #444;\n    }\n  }\n\n  aside {\n    width: 30%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Profile = styled.div`\n  cursor: pointer;\n  height: 40px;\n  width: 40px;\n  background: url(${props => props.src}) center;\n  background-size: cover;\n  border-radius: 50%;\n`;\n","import styled, { css } from 'styled-components';\nimport colors from '~/styles/colors';\n\nexport const Avatar = styled.div`\n  cursor: pointer;\n  height: ${props => props.size}px;\n  width: ${props => props.size}px;\n  background: url(${props => props.src}) center;\n  background-size: cover;\n  border-radius: 50%;\n\n  ${props =>\n    props.editing &&\n    css`\n      border: 2px solid ${colors.primary};\n    `}\n\n  span {\n    color: black;\n  }\n`;\n\nexport default Avatar;\n","import styled from 'styled-components';\nimport { darken } from 'polished';\nimport { Link } from 'react-router-dom';\nimport colors from '~/styles/colors';\n\nexport const Container = styled.div`\n  position: absolute;\n  background: #fff;\n  display: ${props => (props.visible ? 'flex' : 'none')};\n  flex-direction: column;\n  width: 320px;\n  right: 0%;\n  margin: 145px 40px 0 0;\n  border: 1px solid #ccc;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\n\n  section {\n    display: flex;\n    justify-content: space-between;\n    padding: 20px;\n    border-bottom: 1px solid #ccc;\n\n    div {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n\n      p {\n        font-weight: bold;\n        margin-bottom: 5px;\n        color: #000;\n      }\n\n      span {\n        color: #888;\n      }\n\n      button {\n        border-radius: 4px;\n        padding: 7px 10px;\n        color: white;\n        background: ${colors.primary};\n        border: 1px solid ${darken(0.2, colors.primary)};\n        width: 140px;\n        font-weight: bold;\n        font-size: 13px;\n\n        &:hover {\n          background: ${darken(0.2, colors.primary)};\n        }\n      }\n    }\n  }\n`;\n\nexport const Exit = styled(Link)`\n  display: flex;\n  background: #eee;\n  justify-content: flex-end;\n  align-items: center;\n  text-decoration: none;\n  padding: 10px 20px;\n\n  .exit {\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    color: #555;\n    background: none;\n    padding: 7px 15px;\n    &:hover {\n      box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-self: center;\n\n  label {\n    cursor: pointer;\n    border-radius: 50%;\n\n    &:hover {\n      opacity: 0.9;\n    }\n\n    div {\n      display: flex;\n      justify-content: flex-end;\n      align-items: flex-end;\n      span {\n        width: 100%;\n        height: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: #fff;\n        border-radius: 0 0 55px 55px;\n        background: #00000077;\n      }\n    }\n\n    input {\n      display: none;\n    }\n  }\n`;\n","import React, { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport api from '~/services/api';\nimport { updateProfileRequest } from '~/store/modules/user/actions';\n\nimport { Container } from './styles';\nimport { Avatar } from '~/components/Avatar';\n\nexport default function AvatarInput() {\n  const dispatch = useDispatch();\n  const profile = useSelector(state => state.user.profile);\n\n  const [file, setFile] = useState(profile.file && profile.file.id);\n  const [preview, setPreview] = useState(profile.file && profile.file.url);\n\n  const ref = useRef();\n\n  async function handleChange(e) {\n    const data = new FormData();\n\n    data.append('file', e.target.files[0]);\n\n    const response = await api.post('files', data);\n\n    const avatar = {\n      id: response.data.id,\n      url: response.data.url,\n    };\n\n    setFile(avatar.id);\n    setPreview(avatar.url);\n\n    dispatch(updateProfileRequest(avatar));\n  }\n\n  return (\n    <Container>\n      <label htmlFor=\"avatar\">\n        <Avatar\n          src={\n            preview || 'https://api.adorable.io/avatars/110/abott@adorable.png'\n          }\n          size={110}\n        >\n          <span>Editar</span>\n        </Avatar>\n\n        <input\n          type=\"file\"\n          id=\"avatar\"\n          accept=\"image/*\"\n          data-file={file}\n          onChange={handleChange}\n          ref={ref}\n        />\n      </label>\n    </Container>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signOut } from '~/store/modules/auth/actions';\n\nimport { Container, Exit } from './styles';\nimport AvatarInput from '~/components/AvatarInput';\n\nexport default function ManageAccount({ visible }) {\n  const profile = useSelector(state => state.user.profile);\n  const dispatch = useDispatch();\n\n  function handleSignOut() {\n    dispatch(signOut());\n  }\n\n  return (\n    <Container visible={visible}>\n      <section>\n        <AvatarInput\n          src={\n            profile.file === null\n              ? 'https://api.adorable.io/avatars/110/abott@adorable.png'\n              : profile.file.url\n          }\n          name=\"avatar_id\"\n        />\n        <div>\n          <span>\n            <p>{profile.name}</p>\n            {profile.email}\n          </span>\n          <Link to=\"/profile\">\n            <button type=\"button\">Gerenciar Conta</button>\n          </Link>\n        </div>\n      </section>\n      <Exit>\n        <button type=\"button\" className=\"exit\" onClick={handleSignOut}>\n          Sair\n        </button>\n      </Exit>\n    </Container>\n  );\n}\n\nManageAccount.propTypes = {\n  visible: PropTypes.bool,\n};\n\nManageAccount.defaultProps = {\n  visible: false,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { FaSearch, FaCalendar } from 'react-icons/fa';\nimport { Container, Content } from './styles';\nimport { Avatar } from '~/components/Avatar';\nimport ManageAccount from './ManageAccount';\nimport logo from '~/assets/logo.png';\n\nexport default function Header({ tittle }) {\n  const profile = useSelector(state => state.user.profile);\n  const [editing, setEditing] = useState(false);\n\n  function handleEditing() {\n    if (editing) {\n      setEditing(false);\n    } else {\n      setEditing(true);\n    }\n  }\n\n  return (\n    <Container>\n      <Content>\n        <nav>\n          <Link to=\"/dashboard\">\n            <img src={logo} alt=\"JustParty\" width=\"190\" />\n          </Link>\n          {tittle}\n        </nav>\n\n        <aside>\n          <FaCalendar color=\"#eee\" size={17} />\n          <FaSearch color=\"#eee\" />\n          <Avatar\n            src={\n              profile.file === null\n                ? 'https://api.adorable.io/avatars/110/abott@adorable.png'\n                : profile.file.url\n            }\n            size={35}\n            onClick={handleEditing}\n            editing={editing}\n          />\n        </aside>\n\n        <ManageAccount visible={editing} />\n      </Content>\n    </Container>\n  );\n}\n\nHeader.propTypes = {\n  tittle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  tittle: false,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport api from '~/services/api';\n\nimport { Container, Event, Description } from './styles';\nimport Header from '~/components/Header';\n\nexport default function Dashboard() {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    async function loadEvents() {\n      const response = await api.get('events');\n      setEvents(response.data);\n    }\n\n    loadEvents();\n  }, []);\n\n  return (\n    <>\n      <Header tittle=\"DASHBOARD\" />\n      <Container>\n        <ul>\n          {events.map(event => (\n            <Event key={event.id}>\n              <img src={event.banner.url} alt={event.name} />\n              <Description>\n                <div>{event.date}</div>\n\n                <div>\n                  <h3>{event.name}</h3>\n                  <span>\n                    Organizado por <Link to=\"/\">{event.promoter.name}</Link>\n                  </span>\n                </div>\n\n                <button type=\"button\">Comprar</button>\n              </Description>\n            </Event>\n          ))}\n        </ul>\n      </Container>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { darken } from 'polished';\nimport colors from '~/styles/colors';\n\nexport const Container = styled.div`\n  max-width: 600px;\n  margin: 50px auto;\n\n  svg {\n    font-color: ${colors.primary};\n  }\n\n  > button {\n    width: 100%;\n    margin: 10px 0 0;\n    height: 44px;\n    background: #f64c75;\n    font-weight: bold;\n    color: #fff;\n    border: 0;\n    border-radius: 4px;\n    font-size: 16px;\n    transition: background 0.2s;\n\n    &:hover {\n      background: ${darken(0.08, '#f64c75')};\n    }\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    margin-top: 30px;\n\n    input {\n      background-color: rgba(0, 0, 0, 0.1);\n      border: none;\n      border-radius: 4px;\n      height: 44px;\n      padding: 0 15px;\n      color: #222;\n      box-shadow: 1px 1px 4px #00000055;\n      margin: 0 0 10px;\n    }\n\n    span {\n      color: #fb6f91;\n      align-self: flex-start;\n      margin: 0 0 10px;\n      font-weight: bold;\n    }\n\n    hr {\n      border: 0;\n      height: 1px;\n      background: #00000055;\n      margin: 10px 0 20px;\n    }\n\n    button {\n      margin: 5px 0 0;\n      height: 44px;\n      background: ${colors.primary};\n      font-weight: bold;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      font-size: 16px;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.03, colors.primary)};\n      }\n    }\n\n    a {\n      color: #fff;\n      margin-top: 15px;\n      font-size: 16px;\n      opacity: 0.8;\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input } from '@rocketseat/unform';\nimport { MdChevronLeft } from 'react-icons/md';\nimport Header from '~/components/Header';\nimport { updateProfileRequest } from '~/store/modules/user/actions';\n\nimport { Container } from './styles';\n\nexport default function Profil() {\n  const dispatch = useDispatch();\n  const profile = useSelector(state => state.user.profile);\n\n  function handleSubmit(data) {\n    dispatch(updateProfileRequest(data));\n  }\n\n  return (\n    <>\n      <Header tittle=\"GERENCIAR CONTA\" />\n      <Container>\n        <MdChevronLeft size={25} />\n        <Form initialData={profile} onSubmit={handleSubmit}>\n          <Input name=\"name\" placeholder=\"Nome completo\" />\n          <Input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Seu endereço de e-mail\"\n          />\n          <hr />\n          <Input\n            type=\"password\"\n            name=\"oldPassword\"\n            placeholder=\"Sua senha atual\"\n          />\n          <Input type=\"password\" name=\"password\" placeholder=\"Nova senha\" />\n          <Input\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirmação de senha\"\n          />\n          <button type=\"submit\">Atualizar perfil</button>\n        </Form>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport Route from './Route';\n\nimport SignIn from '../pages/SignIn';\nimport SignUp from '../pages/SignUp';\n\nimport Dashboard from '../pages/Dashboard';\nimport Profile from '../pages/Profile';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={SignIn} />\n      <Route path=\"/register\" component={SignUp} />\n\n      <Route path=\"/dashboard\" component={Dashboard} isPrivate />\n      <Route path=\"/profile\" component={Profile} isPrivate />\n\n      <Route path=\"/\" component={() => <h1>404</h1>} />\n    </Switch>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap');\n\n  *{\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  *:focus {\n    outline: 0;\n  }\n\n  html, body, #root {\n    height: 100%;\n    background: linear-gradient(-90deg, #7159c1, #ab59c1);\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button{\n    font: 14px 'Roboto', sans-serif;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ul {\n    list-style: none;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\n\nimport './config/ReactotronConfig';\n\nimport Routes from './routes';\nimport history from './services/history';\n\nimport { store, persistor } from './store';\n\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <Router history={history}>\n          <Routes />\n          <GlobalStyle />\n          <ToastContainer autoClose={3000} />\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.f90eb6b0.png\";"],"sourceRoot":""}